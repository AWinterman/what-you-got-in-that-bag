#!/usr/bin/env sh
EXTS=''

while getopts ":o:s:e:u:f:b:c" opt;
do
    case $opt in
        c)
            SCP="TRUE"
            ;;
        u)
            TARGET=$OPTARG
            ;;
        o)
            OUT=$OPTARG
            ;;

        s)
            STYLE=$OPTARG
            ;;

        e)
            EXTS+="$OPTARG "
            ;;
        f)
            FORMAT=$OPTARG
            ;;
        b)
            BRANCH=$OPTARG
            ;;
        \?)
          echo "Invalid option: -$OPTARG" >&2
          exit 1
          ;;
        :)
          echo "Option -$OPTARG requires an argument." >&2
          exit 1
          ;;
    esac
done

echo $EXTS

if [ -z "$TARGET" ]
then
    cat "./README.txt" >&2
    exit 1
fi


if [ -z "$OUT" ]
then
        OUT="./build"
fi

if [ -z "$STYLE" ]
then
        STYLE='style.css'
fi

if [ -z "$EXTS" ]
then
        EXTS='md'
fi

if [ -z "$FORMAT" ]
then
        FORMAT='html'
fi


TEMP=`mktemp -t what-you-got -d`
CURDIR=`pwd`
TITLE=$(basename $TARGET)

echo "REMOVING $OUT"
rm -rf $OUT

mkdir -p $OUT
cp $STYLE $OUT

if [ -z $SCP ] 
    then
    git clone $TARGET $TEMP >&2

    cd $TEMP 
    git checkout $BRANCH
    cd $CURDIR
else
    scp -r $TARGET $TEMP
fi

for EXT in $EXTS; 
do
    MARKDOWNS=`find $TEMP -iname "*.$EXT"`
    NAMES=$(echo $MARKDOWNS | sed "s|$TEMP||g")

    for name in $NAMES;
    do
            html_name=${name%".$EXT"}.$FORMAT
            TOC+="- [${name%".$EXT"}]($html_name) \n"
            mkdir -p "$OUT"`dirname $name`
            pandoc -s -S -c /$STYLE $TEMP$name -o $OUT$html_name >/dev/null 2>&1
    done
done

echo $TOC | sort | pandoc -f markdown -c /$STYLE -o "$OUT$D/index.$FORMAT"

echo $OUT
